# Chapter 3 在现有测试套中使用pytest

**pytest**可以与大多数现有的测试套一起使用，但他的测试行为与其他的测试工具(如nose或者python的默认的unittest)有差异.
在使用此部分之前，您需要安装pytest。

## 3.1 与现有的测试套一起运行pytest
比如说你想要修改某处的已有的代码库，在将代码拉到你的开发环境后并且设置好python的环境后，你需要在你的工程的根目录下运行：
```
cd <repository>
pip install -e . #解决环境依赖可以通过"python setup.py develop"或"conda develop"（都没用过。。。囧）
```
这将在site-packages中设置一个symlink到你的代码，允许你在运行测试的时候编辑代码，就好像你已经安装了这个package一样。（这段看得我莫名其妙，想了一下，作者的本意应该是，如果想对某个类似github的库进行测试，但是测试代码跟库代码又不好放一起的话，就用这个命令行搞一下）
设置项目为开发模式，可以避免每次运行测试时都需要重新install。

当然，也可以考虑使用tox库。
